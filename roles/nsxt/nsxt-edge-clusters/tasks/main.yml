---
- name: Add edge cluster
  nsxt_edge_clusters:
    hostname: "{{ nsxt.manager.hostname }}"
    username: "{{ nsxt.manager.username }}"
    password: "{{ nsxt.manager.password }}"
    validate_certs: False
    display_name: "{{ item.edge_cluster_name }}"
    description: "{{ item.description | default(omit) }}"
    cluster_profile_bindings:
    - profile_name: nsx-default-edge-high-availability-profile
      resource_type: EdgeHighAvailabilityProfile
    members: "{{ item.edge_cluster_members }}"
    state: present
  with_items: "{{ nsxt.edge_clusters }}"
  retries: 12
  delay: 10
  # until: "'module_stderr' not in result"
  until: "'rc' not in edge_cluster_result"
  register: edge_cluster_result

- name: Wait 180 seconds for the edge clusters to be fully configured
  wait_for:
    timeout: 180
  when: edge_cluster_result.changed

# - name: Check API is responding with new cluster
#   uri:
#     url: https://{{ nsxt.manager.ip }}/api/v1/edge-clusters
#     user: "{{ nsxt.manager.username }}"
#     password: "{{ nsxt.manager.password }}"
#     method: GET
#     force_basic_auth: yes
#     validate_certs: False
#     return_content: yes
#   register: edge_cluster_debug
#   with_items: "{{ nsxt.edge_clusters }}"

# - debug: var=edge_cluster_debug

# - name: Check API is responding with new cluster
#   uri:
#     url: https://{{ nsxt.manager.ip }}/api/v1/edge-clusters
#     user: "{{ nsxt.manager.username }}"
#     password: "{{ nsxt.manager.password }}"
#     method: GET
#     force_basic_auth: yes
#     validate_certs: False
#     return_content: yes
#   retries: 12
#   delay: 10
#   register: edge_cluster_check
#   until: "item.edge_cluster_name in edge_cluster_check.content"
#   with_items: "{{ nsxt.edge_clusters }}"